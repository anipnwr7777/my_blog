1. debug = true kar lo warna reload hi nhi hoga kuch bhi karoge to.

2. do folder to banane hi hote hai shuru me. static aur template. static public hota hai aur template private.

3. templates folder me ek nayi file banao index.html

4. render template ki help se ham ek file ko show kar sakte hai (html file) flask ke help se.
    jaha pehle function ek hello word return kar rraha tha wha ham ek file return karenge aur us end point ke request hone pe wo html file render karege.

5. jinja templating : when server needs to send dynamic response on the user request then we use jinja templating. 
    kuch aisa samjh lo ki har user ko same code ni de sakte, sabko unke interest ke according page dena hai to ek code in the form of template return karega server jo ki user to user apne aap ko mould kar lega, aur sabko
    same nhi dikhega ( you can understand it like something being dynamic).

-------------------------------------------------------------------------------------------------------
6. 

Folder structure for a Flask app:

    A proper Flask app is going to use multiple files — some of which will be template files. The organization of these files has to follow rules so the app will work. Here is a diagram of the typical structure:

my-flask-app
   ├── static/
   │   └── css/
   │       └── main.css
   ├── templates/
   │   ├── index.html
   │   └── student.html
   ├── data.py
   └── students.py

Everything the app needs is in one folder, here named my-flask-app.

That folder contains two folders, specifically named static and templates.

    The static folder contains assets used by the templates, including CSS files, JavaScript files, and images. In the example, we have only one asset file, main.css. Note that it’s inside a css folder that’s inside the static folder.

    The templates folder contains only templates. These have an .html extension. As we will see, they contain more than just regular HTML.

In addition to the static and templates folders, this app also contains .py files. Note that these must be outside the two folders named static and templates.

Attention:

    The templates will not work if this folder structure is not exactly as described above. Your app folder can be named anything (not only my-flask-app), but the static and templates folders must be named and organized as shown above. The static folder can contain multiple folders and files. The names of files are up to you.


------------------------------------------------------------------------------------------------------------

7. <link href=" {{ url_for('static', filename = 'css/styles.css')}}" rel="stylesheet" />

    isme ye jo url for static hai ye bas ek instruction sort of hai jo ki ise bata raha ki file jo hai wo static 
    folder me hai. waha jake dekho. ham file path set karke bhi kar sakte the but ye method bhi aana chaiye. 
    zaroori hai.

8. jinja ke help se template use kiye hai jisse ki code redundancy ko kam kar sake aur maintainability aur 
    readability bani rahi code ki.

9. xampp me database banaya UI ke help se, apne blog ke liye.

10.    setup SQLAlchemy for the website.

        Flask-SQLAlchemy is an extension for Flask that adds support for SQLAlchemy to your application. 
        SQLAlchemy is a library that facilitates the communication between Python programs and databases. Most of the times, this library is used as an Object Relational Mapper (ORM) tool that translates Python classes to tables on relational databases and automatically converts function calls to SQL statements.

11. make a class with the same name as the table in the database with initial letter as capital.

12. contact function ke andar ek post request kar denge, jab bhi koi form bhar ke submit karega.

13. by default a request is a get request.
  
14. from flask import request --> request type define karne ke liye use hota hai.

15. button ke action ko set kar lena usse kya hoga ki tum use bata rahe ho ki jab tu press hoga tab tu "/contact" wale endpoint 
    me request marna.

16. dimmag kharab hogya connect karne me database se, fir ek video dekh ke wo keyword add kara SQLALCHEMY_DATABASE_URI me
    tab jake chala hai.

17. config.json : create karo --> iska mmotive hota hai ki apne blog ko koi bhi use kar sake.  koi bhi is website ko clone kar
    sakta hai aur use apne 
    according config karke use kar sakta hai. basically we are trying to code a configurable website with certain parameters that can be changed and
    used by everyone. (creating a more generalized website)

18. jab bhi kisi table ko fetch karna hota hai ya fir usme kuch entry karni hoti hai, tab us time pe ek class define karni hoti 
    hai main.py me.

19. from flask import session --> used for session variables.

20. app.secret_key = "super-secret-key"  --> security reasons ke liye flask mangta hai ye.
